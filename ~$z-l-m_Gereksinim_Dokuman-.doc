

Müşteri İlişkileri Yönetimi Sistemi
(CRM)


 15253652 Fatih DEMİR 
 15253651 Fatih BAŞBUĞ
 15253653 Ufuk EROL
 15253660 Bilal SARIEL 











İÇİNDEKİLER




1. Giriş .............................................................................................................. 3
	

	1.1 Sistemin Amacı .................................................................................. 3

	1.2 Sistemin Kapsamı .............................................................................. 3

	1.3 Hedefler ve Başarı Kriterleri .............................................................. 3

	1.4 Genel Bakış …….................................................................................. 3


2. Teklif Edilen Sistem  ...................................................................................... 3


2.1 Fonksiyonel Gereksinimler ................................................................ 3

	2.2 Fonksiyonel Olmayan Gereksinimler .................................................. 4

		2.2.1 Kullanılabilirlik ……………………………………………………………… 4

		2.2.2 Güvenilirlik …..……………………………………………………………… 4

		2.2.3 Performans ……..…………………………………………………………… 4

		2.2.4 Desteklenebilirlik ……..…………………………………………………… 4

		2.2.5 İmplementasyon …………………………………………………………… 4

		2.2.6 Arayüz ………….……………………………………………………………… 4

		2.2.7 Gizlilik Gereksinimi ……………………………………………………..… 5

	2.3 Sistem Modelleri …………………………................................................... 5

		2.3.1 Aktörler ………..……………………………………………………………… 5

		2.3.2 Olaylar ………………………………………………………………………… 6

		2.3.3 Senaryolar …………………………………………………………………… 6

		2.3.4 Use-Case Modeli …………………………………………………………… 9







1. Giriş

1.1 Sistemin amacı

Müşteri İlişkileri Yönetim Sistemi(Customer Relationship Management), Müşteri ilişkileri için tasarlanmış ve küçük ölçekli şirketlerin kullanabileceği, müşterilerden geri dönüş, istek, şikayet ve ek özellik gibi bildirimler alıp bunları yönetebilmek.

1.2 Sistemin kapsamı

	 Küçük ve orta büyüklükteki şirketlerin müşteri ilişkilerini en iyi şekilde sağlamak. Müşterilerle aktif iletişim kurmak. Uygulama üzerinden çalışanların aktif olarak iletişimlerini sağlanmak. Bu sayede herhangi bir işi daha kısa zamanda tamamlayabilmek. Herkese iş paylaşımını en iyi şekilde yapmak. Geri bildirimler alınarak ürünlerin eksik yönlerinin daha rahat tespit edilmesidir.

1.3 Hedefler ve Başarı Kriterleri

- Müşterilerle aktif iletişim kuracak sistem,
- Daha az telefon akışı sağlama,
- Personel kayıtlarının kolayca yönetileceği bir sistem,
- Müşteri ilişkisi verimliliğini en üst düzeye çıkarma,
- İsteklere göre geliştirilebilen bir sistem,
- Bilgi teknolojileri alanındaki hızlı değişime uyum sağlamak ve mevcut teknolojilerden yararlanmanın yanı sıra teknolojinin gelişimine katkıda bulunacak bir sistem,

oluşturmak öncelikli hedeflerimizdir.

1.4 Genel Bakış

CRM Müşteri İlişkileri Yönetimi Sistemi, Web uygulamasını kullanan şirketlerde, yönetici çalışan personele iş tanımlayıp bunu web uygulaması üzerinden gönderebilecektir. Aynı zamanda çalışan personel isteklerini, yaşadığı olumsuzlukları vb. durumları bu web uygulaması üzerinden raporlayabilecektir. Şirket yazılımını kullanan müşteriler istek, öneri ve şikayetlerini yine uygulama üzerinden mesaj veya bildirim olarak gönderebilecek ve takip edebilecektir.


2. Teklif edilen sistem

2.1 Fonksiyonel gereksinimler

Sistemde 4 çeşit kullanıcı ve malî sistem vardır.

- Resepsiyonist yeni gelen hastayı sisteme kaydeder. Hastanın gereksinimine göre randevuyu verir (örneğin; doktorla randevu,  test için laboratuvar randevusu veya ameliyat randevusu). Ayrıca resepsiyonist hasta ve yatakhane bilgilerine ulaşabilir.
 
- Doktor resepsiyonistin kendisine atadığı hastayı muayene eder ve hastanın durumuna göre karar verir.

- Hemşire ilgili olduğu hastanın kontrollerini yapar.

- Yönetici personel ekleyip çıkarır. Bazı personeller için gereken düzenlemeleri yapar.

- Malî sistemin gelirleri; hasta tarafından ödenen yatakhane ücreti, ameliyat ücreti ve muayene ücretidir. Giderleri ise; personellerin maaşıdır.




2.2 Fonksiyonel olmayan gereksinimler

2.2.1 Kullanılabilirlik

	Projede kullanım kolaylığının olması yüksek derecede önemli. Tüm gün bilgisayr başında BCM hastane otomasyonunu kullanacak kişiler olduğundan işlerini hızlandıracak biçimde en ufak ayrıntıları dahi içerecek şekilde kullanım kolaylığına dikkat edilmelidir. Projenin modüller ile birlikte en çok dikkat edilmesi gereken kısmı. Bunun için hızlı erişim menüleri, kısa yollar test edenlerin önerileri dikkate alınarak oluşturulmalı.
 
2.2.2 Güvenilirlik

BCM hastane otomasyonunda verilerin korunması ve güvenliği oldukça önemlidir. Hasta ve hastane kayıtları tutulduğu için veri kaybı hasarlara yol açabilir. Veritabanının göçmesi, elektrik kesintisi gibi durumlarda sistem bütünlüğü için veritabanının loglama özelliğinden faydalanılacak. Programın içinde veri yedekleme ve aktarma özelliğinin bulunacaktır. Bilgiler sunucuda durduğu için istemcilerde meydana gelebilecek hasarlar veriyi etkilemez.

2.2.3 Performans

Sistemin kabul edilebilir ölçüde hızlı çalışmalı. Veritabanı bağlantısı, gelen sonuçların hızı, ağdaki bağlantı kapasitesi ne olursa olsun bilgisayar başında çalışan kişinin fark edeceği şekilde olmamalı. Bunun için danışmanların ve kullanıcıların onayına, ve değişik platformlardaki test sonuçlarına bakılması gerekir. En düşük 32 MB ram’e sahip Windows 95 makinelerde çalışabilmeli. Linux’ta ise 64 MB Ram yeterli olacaktır.

2.2.4 Desteklenebilirlik

Projede kullanılan veritabanının transaction ve foreign key desteğinin olması gerekli. Programın kurulduğu platformun da Java destekli olmalı ve Java programlarını çalıştırabilmeli. Özgür yazılım lisansı sayesinde yasal gereksinimleri bulunmamakta.

2.2.5 İmplementasyon

Sistem için çizdiğimiz UML diyagramlarını, Java kodlarına uyarlamak.

2.2.6 Arayüz

BCM hastane otomasyonunda kullanıcı arabirimi pencerelerdir. Tek bir pencerede yer alacak programda, kullanıcıyı login sayfası karşılar. Login kullanıcı, rolüne göre kendine ait bilgilere ulaşır. Görsel özellikler için gereksinim dökümanı ayrıca hazırlanacaktır. Kullanıcı düğmelere basarak veya formları doldurarak işlem yapacaktır. Ara yüzün çıktısı ekran, girdileri ise Mouse ve klavyedir.



2.2.7 Gizlilik Gereksinimi

Kullanıcıların sınırlandırılması, sadece kendilerine ait bölümleri görebilmesi ve gerektiğinde bu ayarların değiştirilmesi yüksek derecede önemli. Veritabanında, dataların güvenliği için ek bir özellik bulunmuyor. Sunucunun başına geçen veya dosyaları çalan birisi kayıtlara ulaşabilir. Sunucu güvenliği işletim sisteminin kendi güvenliği ile eş. Program açılırken kullanıcı adı ve şifre soracak. Sistem bu bilgileri kullanarak izinlerini kontrol edecektir. Kullanıcılar veritabanına başka bir programla bağlanıp bilgileri görebilir. Programda kullanılan gizlilik sadece verinin bütünlüğü ve iş bölümü için. İstenmeyen kullanıcıların sisteme bağlanmasını engellemek işletim sisteminin sorumluluğundadır.


2.3 Sistem Modelleri


2.3.1 Aktörler

Actor (Aktör)	
Definition (Tanım)

Doktor	
Hastayı muayene eder.
Sistemden maaşını çeker.

Resepsiyonist
	
Hasta kaydı yapar.
Randevu verir.
Hastane ile ilgili bilgilere ulaşabilir.

Hemşire
	
Hastanın durumunu kontrol eder.
Sistemden maaşını çeker.

Yönetici
	Personel ekleyip çıkartır.
Personel bilgilerini düzenler.
Gelir
	Yatakhane, ameliyat ve muayene ücretleri sayesinde sisteme girdi olur.
Gider
	
Maaş ücreti sayesinde sistemden çıkış olur.

Tablo 1- Hastane otomasyonu için aktörler






2.3.2 Olaylar
Olay Listesi:

Kullanıcılar sisteme login olurlar.

Resepsiyonist sisteme kayıt yapar.

Resepsiyonist hastaya randevu verir.

Resepsiyonist bilgileri kontrol eder.

Doktor hastayı muayene eder.

Doktor maaşını çeker.

Hemşire hastayı kontrol eder.

Hemşire maaşını çeker.

Yönetici personel ekler.

Yönetici personel çıkartır.

Yönetici personelin bilgilerini düzenler.

Gelir yatakhane’yi kullanma ücreti alır.

Gelir ameliyathaneyi kullanma ücreti alır.

Gelir muayene ücreti alır.

Gider maaş verir.


2.3.3 Senaryolar

Senaryo adı	kayıtYap
Participating Actor Instances	Banu: Resepsiyonist
Flow Of Events	1- Banu sisteme login olur.
2- Banu “Yeni Kayıt Ekle” linkine tıklar.
3- Banu hastanın bilgilerini sisteme girer.
4- Banu hastanın durumuna göre doktor ayarlar.
5- Banu hastadan duruma göre ücreti tahsil eder.

Tablo 2 – Kayıt Yap use-case’i için kayıtYap senaryosu.



Senaryo adı	hastaneVeHastaBilgilerineUlaş
Participating Actor Instances	Banu: Resepsiyonist
Flow Of Events	1- Banu sisteme login olur.
2- Banu “Arama” kutusuna kişinin kimlik numarasını veya yatakhane adını yazar.
3- Banu daha sonra “Ara” butonuna basar.
4- Banu karşısına gelen sonuçlar üzerinden istediği hastanın bilgilerine veya yatakhane durumuna ulaşır.

Tablo 3 – Hasta Bilgilerine Ulaş use-case’i için hastaneVeHastaBilgilerineUlaş senaryosu.


Senaryo adı	Personel ekle
Participating Actor Instances	Hasan: Yönetici
Flow Of Events	1- Hasan sisteme login olur.
2- Hasan “Yeni Personel Ekle” linkine basar.
3- Hasan yeni personel için kullanıcıAdı atar.
4- Hasan yeni personel için şifre atar.
5- Hasan bilgileri tamamladıktan sonra “Kaydet” butonuna basarak bilgileri hastanenin veritabanına ekler.

Tablo 4 – Personel ekle use-case’i için personelEkle senaryosu.



Senaryo adı	Personel sil/düzenle
Participating Actor Instances	Hasan: Yönetici
Flow Of Events	1- Hasan sisteme login olur.
2- Hasan silinecek/düzeltilecek olan personeli kullanıcı listesinden seçer.
3- Hasan sil/düzenle butonuna tıklar.
4- Hasan personeli siler veya personel bilgilerini yeniden düzenler.
5- Hasan düzenlemeyi yaptıktan sonra “Kaydet” butonuna basar.

Tablo 5 – Personel sil / düzenle use-case’i için personelSil senaryosu.


Senaryo adı	Muayene Et
Participating Actor Instances	Adem: Doktor
Flow Of Events	1- Adem sisteme login olur.
2- Adem randevu tarihlerine bakar.
3- Adem randevu tarihinde hastayı muayene eder.
4- Adem hastanın durumunu karara bağlar. (Taburcu eder veya yatakhane için resepsiyoniste gönderir.)

Tablo 6 – Muayene et use-case’i için muayeneEt senaryosu.



Senaryo adı	Kontrol Et
Participating Actor Instances	Sibel: Hemşire
Flow Of Events	1- Sibel sisteme login olur.
2- Sibel doktorun hastasını kontrol eder.
3- Sibel kontrol ettiği hasta için sisteme not düşer.
(örn: şu gün şu saatte iğne yapıldı.)

Tablo 6 – Kontrol et use-case’i için kontrolEt senaryosu.
































2.3.4 Use-Case Modeli






